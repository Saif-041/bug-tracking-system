c
@project.save!
@project.managar
@project.managar.class
@project.user_id = current_user.id
@project = Project.new(project_params)
c
@project.save!
@project.user_id = current_user.id
@project = Project.new(project_params)
@project.managar.class
@project.managar
c
@project.save!
@project.save
@project.save!
@project
@project.user_id = current_user.id
@project.managar.class
@project.managar
@project = Project.new(project_params)
c
@project.managar = User.find(current_user.id)
@project.managar
@project.save!
@project.user_id = current_user.id
@project.managar = current_user.id
@project.managar = current_user
@project.managar.class
@project.managar
@project = Project.new(project_params)
c
@project.save!
@project.user_id = current_user.id
@project = Project.new(project_params)
c
@project.save!
@project.user_id = current_user.id
@project = Project.new(project_params)
c
@project.save!
@project.user_id = current_user.id
@project = Project.new(project_params)
c
@project.save!
@project.user_id = current_user.id
@project = Project.new(project_params)
@project
c
@project.save!
@project
@project.user_id = current_user.id
@project = Project.new(project_params)
@project.save!
@project
@project.user_id = current_user.id
@project = Project.new(project_params)
@project
project_params
params
c
Bc
if params[:project][:name].blank? 
if params[:project][:name].blank? end end
if params[:project][:name].blank? end
if params[:project][:name].blank?  end
if !! params[:project][:name].blank?  end
if !! params[:project][:name].blank?  end end
params[:project][:name].blank? 
 !! params[:project][:name].blank? 
 !! params[:project][:name].nil? 
params[:project][:name].blank? 
 !! params[:project][:name].blank? 
if !! params[:project][:name].blank? 
if params[:project][:name].blank? 
c
params[:project][:name].blank? projects_path 
if params[:project][:name].blank? end
 !params[:project][:name].blank?
if !params[:project][:name].blank?
if params[:project][:name].blank?
params[:project][:name].blank?
params[:project][:name]
params[:project]
params
if params[:project][:name].blank?
params.require(:project).permit(:name)
params.require(:project).permit(:name).blank?
params.require(:project).permit(:name)
params.require[:project][:name].nil?
if params.require[:project][:name].nil?
if params.require[:project][:name] == ""
if params.require(:project) == ""
if params.require(:project)
if params.require[:project]
if params[:project]
if params.require[:project][:name]
if params[:project][:name]
params.require(:project).permit(:name)
params.require(:project).permit(:name).present?
params.require(:project).permit(:name).nil?
params.require(:project).permit(:name)
params.require(:project)
params.require(:project).present?
params.require(:project).nil?
params
c
project_path(@project)
projects_path(@project)
projects_path
c
@features = Project.find_by(user_id: params[:id]).bugs.where(bug_type: "Feature").count if manager?
@features = Project.find_by(user_id: params[:id]).bugs.where(bug_type: "Feature") if manager?
@features = Project.find_by(user_id: params[:id]).bugs.count if manager?
@features = Project.find_by(user_id: params[:id]).bugs if manager?
@features = Bug.where(assign_id: params[:id]) if developer?
c
@user
c
@user
c
@s=@dev+@qa
@qa
@user
@dev
c
@zx
@user
c
@user.each do |user| @dev.merge!({id: user.id, name: (user.name.to_s + "-Dev")}) end
@user.each do |user| @dev.merge!({id: user.id, name: (user.name + "-Dev")}) end
@user.each do |user| @dev.merge!({id: user.id, name: user.name + "-Dev"}) end
@user.each do |user| @dev.merge!({id: user.id, name: user.name}) end
@user.each do |user| @dev.append({id: user.id, name: user.name}) end
@dev = {}
@user.each do |user| @dev << {id: user.id, name: user.name} end
@user.each do |user|
            @user.each do |user|
            @dev = {}
                @dev << {id: user.id, name: user.name} 
            @user.each do |user|
@dev = {}
@dev = User.select("id,name").where(user_type: 'Developer').map {|user| user: {user.id, user.name+"-Dev"}}
@dev = User.select("id,name").where(user_type: 'Developer').map{|user|[user.name+"-Dev"]}
@dev = User.select("id,name").where(user_type: 'Developer')
@dev = User.select("id,name").where(user_type: 'Developer').map.with_index { |k,v| [v, "#{k.name} - Dev"] }
@dev
@user
@r
@x
@z
@y
c
@z
@user
@z.to_fs
@z.to_f
@z.to_d
@z.to_c
@z.to_b
@z.to_i
@z.to_sym
@z.to_s
@z
@z.to_a
@z.to_h
@z
c
@user.select("id,name")
@user
c
@user
@z
c
@z
c
@qa
@dev
@user
c
@q
@qa
@dev
@q.to_a
@q.to_h
@q
@user
c
@q
@q=@user.map.with_index{|k,v| [:name => k.name+"-p",:id => v]}
@q.to_h
@q
@q=@user.map.with_index{|k,v| [k.name+"-p",v]}
@user.map.with_index{|k,v| [k.name+"-p",v]}
@user
@qa
@dev
@user.map.with_index{|k,v| [k.name+"-p",v]}
@user.map.with_index{|k,v| [v]}
@user.map.with_index{|k,v| [k]}
@user.map.with_index{|k,v| [v]}
@user.map{|k,v| [v]}
@user.map{|k,v| [k]}
@user.map{|k,v| [k,k]}
@user.map{|k,v| [v,v]}
@user.map{|k,v| {v,k}
@user.map{|k,v| [v,k]}
@user
c
@dev
c
@user
@dev
@qa
c
@qa
@dev
c
@dev
@user
@qa
c
@user
@dev
@qa
c
@qa
@dev
c
@user.map.with_index { |ch, idx| [ch.name+"-Dev", idx] }
@user = User.select("id,name").where(user_type: 'Developer')
@user.map.with_index { |ch, idx| [ch.to_s+"-Dev", idx] }
@user.map.with_index { |ch, idx| [ch+"-Dev", idx] }
@user = User.select("id,name").where(user_type: 'Developer')
@user.map.with_index { |ch, idx| ["Dev", idx] }
@user.class
@user
@user.type_of
@user.typeof
@user.type
@user = User.select("id,name").where(user_type: 'Developer')
@user = User.select("id,name").where(user_type: 'Developer').to_h
User.select("id,name").where(user_type: 'Developer')
@user.map { |k,v| [}
@user = User.select("id,name").where(user_type: 'Developer')
@user
c
@user
@user.map { |k,v| k}
@user
c
@bugs
@bugs = Project.find_by(user_id: params[:id]).bugs if manager?
@bugs
@bugs = Project.find_by(user_id: params[:id]).bugs.count if manager?
@bugs = Project.find_by(user_id: params[:id]).bugs if manager?
