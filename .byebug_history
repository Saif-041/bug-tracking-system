c
project_path(@project)
projects_path(@project)
projects_path
c
@features = Project.find_by(user_id: params[:id]).bugs.where(bug_type: "Feature").count if is_manager?
@features = Project.find_by(user_id: params[:id]).bugs.where(bug_type: "Feature") if is_manager?
@features = Project.find_by(user_id: params[:id]).bugs.count if is_manager?
@features = Project.find_by(user_id: params[:id]).bugs if is_manager?
@features = Bug.where(assign_id: params[:id]) if is_developer?
c
@user
c
@user
c
@s=@dev+@qa
@qa
@user
@dev
c
@zx
@user
c
@user.each do |user| @dev.merge!({id: user.id, name: (user.name.to_s + "-Dev")}) end
@user.each do |user| @dev.merge!({id: user.id, name: (user.name + "-Dev")}) end
@user.each do |user| @dev.merge!({id: user.id, name: user.name + "-Dev"}) end
@user.each do |user| @dev.merge!({id: user.id, name: user.name}) end
@user.each do |user| @dev.append({id: user.id, name: user.name}) end
@dev = {}
@user.each do |user| @dev << {id: user.id, name: user.name} end
@user.each do |user|
            @user.each do |user|
            @dev = {}
                @dev << {id: user.id, name: user.name} 
            @user.each do |user|
@dev = {}
@dev = User.select("id,name").where(user_type: 'Developer').map {|user| user: {user.id, user.name+"-Dev"}}
@dev = User.select("id,name").where(user_type: 'Developer').map{|user|[user.name+"-Dev"]}
@dev = User.select("id,name").where(user_type: 'Developer')
@dev = User.select("id,name").where(user_type: 'Developer').map.with_index { |k,v| [v, "#{k.name} - Dev"] }
@dev
@user
@r
@x
@z
@y
c
@z
@user
@z.to_fs
@z.to_f
@z.to_d
@z.to_c
@z.to_b
@z.to_i
@z.to_sym
@z.to_s
@z
@z.to_a
@z.to_h
@z
c
@user.select("id,name")
@user
c
@user
@z
c
@z
c
@qa
@dev
@user
c
@q
@qa
@dev
@q.to_a
@q.to_h
@q
@user
c
@q
@q=@user.map.with_index{|k,v| [:name => k.name+"-p",:id => v]}
@q.to_h
@q
@q=@user.map.with_index{|k,v| [k.name+"-p",v]}
@user.map.with_index{|k,v| [k.name+"-p",v]}
@user
@qa
@dev
@user.map.with_index{|k,v| [k.name+"-p",v]}
@user.map.with_index{|k,v| [v]}
@user.map.with_index{|k,v| [k]}
@user.map.with_index{|k,v| [v]}
@user.map{|k,v| [v]}
@user.map{|k,v| [k]}
@user.map{|k,v| [k,k]}
@user.map{|k,v| [v,v]}
@user.map{|k,v| {v,k}
@user.map{|k,v| [v,k]}
@user
c
@dev
c
@user
@dev
@qa
c
@qa
@dev
c
@dev
@user
@qa
c
@user
@dev
@qa
c
@qa
@dev
c
@user.map.with_index { |ch, idx| [ch.name+"-Dev", idx] }
@user = User.select("id,name").where(user_type: 'Developer')
@user.map.with_index { |ch, idx| [ch.to_s+"-Dev", idx] }
@user.map.with_index { |ch, idx| [ch+"-Dev", idx] }
@user = User.select("id,name").where(user_type: 'Developer')
@user.map.with_index { |ch, idx| ["Dev", idx] }
@user.class
@user
@user.type_of
@user.typeof
@user.type
@user = User.select("id,name").where(user_type: 'Developer')
@user = User.select("id,name").where(user_type: 'Developer').to_h
User.select("id,name").where(user_type: 'Developer')
@user.map { |k,v| [}
@user = User.select("id,name").where(user_type: 'Developer')
@user
c
@user
@user.map { |k,v| k}
@user
c
@bugs
@bugs = Project.find_by(user_id: params[:id]).bugs if is_manager?
@bugs
@bugs = Project.find_by(user_id: params[:id]).bugs.count if is_manager?
@bugs = Project.find_by(user_id: params[:id]).bugs if is_manager?
@bugs = Project.find_by(user_id: params[:id]).bugs.count if is_manager?
@bugs = Project.find_by(user_id: params[:id]).bugs.paginate(page: params[:page], per_page: 5) if is_manager?
@bugs = Bug.where(created_id: params[:id]).paginate(page: params[:page], per_page: 5) if is_qa?
@bugs = Bug.where(assign_id: params[:id]).paginate(page: params[:page], per_page: 5) if is_developer?
params
c
@bug.screenshot?
c
@bug.screenshot?
@bug.screenshot.nil?
@bug.screenshot.present?
@bug.screenshot
@bug.title
@bug
bug_params(:assign_id)
bug_params.assign_id
bug_params
@bug
@bug.screenshot
@bug.screenshot.nil?
@bug.screenshot
@bug
c
bug_params
c
bug_params
params
c
bug_params
params.require(:bug).permit(:screenshot)
params.require(:bug).permit({screenshot: []})
params
c
params.require(:bug).permit({screenshot: []})
params
params.require(:bug).permit({screenshot: []})
bug_params
c
params.require(:bug).permit({screenshot: []})
params.require(:bug).permit(:screenshot)
params.require(:bug).permit(:title)
params.require(:bug)
params
bug_params
params
c
@bug.update(bug_params)
@bug
bug_params
params
c
user_bugs_path(current_user)
user_bugs_path(4)
user_bugs_path(1)
user_bugs_path
c
@bugs = Bug.where(created_id: params[:id]) if is_qa?
@bugs = Bug.where(assign_id: params[:id]) if is_developer?
c
@bugs = Bug.where(assign_id: params[:id]) if is_developer?
@bugs = Project.find_by(user_id: params[:id]).bugs if is_manager?
@bugs = Bug.where(created_id: params[:id]) if is_qa?
params
c
@project = Project.find(params[:project_id])
params[:project_id]
params
c
@project = Project.find(params[:project_id])
params
@project
bugs_projects_path
bug_projects_path
bugs_project_path
bug_project_path
project_bug_path(@bug)
project_bug_path
project_bugs_path
project_bugs_path(@bug)
c
project_bugs_path(@bug)
project_bugs_path
projects_path
c
@bug
c
project_bugs_path
project_bugs_path(@bug)
project_bug_path(@bug)
project_bug_path
@bug.update(bug_params)
if @bug.update(bug_params)
@bug
c
exit
project_bugs_path
@bug
c
@bugs
@bugs = Bug.where(created_id: current_user.id) if is_qa?
params
c
@bug
c
params
c
