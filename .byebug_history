c
project_params
c
project_params
c
project_params
c
project_params
c
p
p["users"] = p["users"].reject(&:empty?).map(&:to_i)
p["users"].reject(&:empty?).map(&:to_i)
p
p["users"].reject(&:empty?).map(&:to_i)
p["users"]
p
p = params.require(:project).permit(:name, {users: []})
project_params
p = params.require(:project).permit(:name, {users: []})
p
c
p["users"].reject(&:empty?).map(&:to_i)
p
p = params.require(:project).permit(:name, {users: []})
p
p = params.require(:project).permit(:name, {users: []})
p
project_params
c
project_params
c
project_params
c
project_params
@project.users
@project
@project.update(project_params)
@project.update(project_params)!
@project.update!(project_params)
@project.update(project_params)
project_params
c
project_params
c
params.require(:project).permit(:name, {users: []})
params.require(:project).permit(:name, {users: [].reject(&:blank?)})
params.require(:project).permit(:name, {users: [].reject(&:blank?})
params.require(:project).permit(:name, {users: []}.reject(&:blank?})
params.require(:project).permit( {users: [].reject(&:blank?)})
params.require(:project).permit( {users: []}.reject(&:blank?))
params.require(:project).permit( {users: []}.reject(&:blank?)})
params.require(:project).permit( {users: []}.reject(&:blank?})
params.require(:project).permit(:name, {users: [].reject(&:blank?)})
params
params.require(:project).permit(:name, {users: []}.reject(&:blank?})
params.require(:project).permit(:name, :users)
params.require(:project).permit(:name, {users: []}.reject(&:blank?})
params.require(:project).permit(:name, {users: [].reject(&:blank?)})
params.require(:project).permit(:name, {users: []})
params.require(:project).permit(:name, {:users []})
params.require(:project).permit(:name, :users)
params.require(:project).permit(:name)
params
c
params[:project][:users].reject(&:blank?)
params[:project][:users]
@user
params
c
@user.size
@user
@user.size
@user.count
@user
c
params[:project][:users]
params
c
params
params[:project][:users]
c
params[:project][:users]
params
c
params
params[:project][:users]
c
params[:project][:users]
c
params[:project][:users]
c
params[:project][:users].to_a
params[:project][:users].to_h
params[:project][:users]
params[:project]
params
@usr.save!
@usr.save
@project.update(project_params)
project_params@
@project
@usr
params
c
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user.id, user.name] }.to_h
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user.id, user.name] }.to_h.to_a
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user.id, user.name] }.to_h
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user.id, user.name] }
c
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user.id, user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user.id-2, user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user, user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user[3], user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user[2], user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user[0], user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user[0].id, user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user.values()[0].id, user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user.values(user)[0].id, user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user.values(user)[0], user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user.limit(0), user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user.limit(0).id, user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user.limit(1).id, user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user[0].id, user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user.first.id, user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user, user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user.id-2, user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user.id-user.first.id, user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user.id-user[0].id, user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user.id-2, user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user,k| [k, user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user,k| [k+1, user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user,k| [++k, user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user,k| [k, user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|k,user| [k, user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user.id, user.name] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user.id, user.name] }.to_h
c
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).map{|user| [user.id, user.name] }.to_h
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).map{|user| [user.id, user] }.to_h
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).map{|user| [user.id, user] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_h.map{|user| [user.id, user] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user.id, user] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user.id, user] }.to_h
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a.map{|user| [user.id, user] }
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA')).to_a
User.select("id,name").where(user_type: 'Developer').or(User.select("id,name").where(user_type: 'QA'))
User.select("id,name").where(user_type: 'QA')
User.select("id,name").where(user_type: 'Developer')
c
current_user.projects
User.projects
User.Projects
User
User = current_user
UserProject.where(user_id: current_user.id).project_ids
UserProject.where(user_id: current_user.id)
UserProject.where(user_id: current_user.id).project_id
UserProject.where(user_id: current_user.id)
Project.where(id: (UserProject.where(user_id: current_user.id)))
Project.where(id: (UserProject.where(user_id: current_user.id).project_id))
Project.where(id: (UserProject.where(user_id: current_user.id).project_id)
UserProject.where(user_id: current_user.id) if is_qa?
UserProject.where(user_id: current_user.id) if is_manager?
 is_qa?
 is_manager?
UserProject.where(user_id: current_user.id) if is_manager?
UserProject.where(user_id: current_user.id)
Project.where(user_id: current_user.id)
c
params.permit(:id)
params.permit(:name)
params.require(:project).permit(:name)
params.require(:project).permit(:id)
params.require(:project).permit(:name, :id)
params.require(:project).permit(:name)
params
c
params
c
params(:id)
params(:id)\
params
params.require(:id)
params.require(:projects)
params.require[:projects]
params[:projects]
params
params.require(:project_id)
c
params.require(:project_id)
params.require(:id)
params
c
params.require(:id)
params.require(:id).permit(:id).merge(project_id: :id)
params.require(:id)
params.require(:project)
params
c
params
c
params.require(:project)
params(:project)
params
c
params.require(:id).merge(project_id: 1)
params.require(:id).merge(:project_id 1)
params.require(:id).merge(:project_id)
params.require(:id).merge(project_id)
params.require(:id).merge()
params.require(:id).merge(project_id: :id)
params.require(:id).permit(:id).merge(project_id: :id)
params.require(:id).permit(:id)
params.require(:id).!permit(:id)
params.require(:id)!.permit(:id)!
params.require(:id).permit(:id)!
params.require(:id).permit(:id)
params.require(:id)
params.req
params.require(:project)
params.require(:project).permit(:id)
param
c
actual_param
actual_params
current_user.projects
current_user.project
current_user.users
current_user.projects
current_user
params
request.referrer
request.referrer[-1]
request.referrer
c
request.referrer
request.referrer[-1]
request.referrer[1..35]
request.referrer[1..25]
request.referrer[1..15]
request.referrer[1..5]
request.referrer[3]
request.referrer[7]
request.referrer[-1]
request.referrer
request
remember_page[0]
remember_page[1]
remember_page[2]
remember_page[-1]
remember_page[0]
remember_page[0..0]
remember_page[0..1]
remember_page[0..2]
remember_page[0..32]
remember_page[1..32]
