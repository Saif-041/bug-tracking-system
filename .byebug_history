c
@project
c
@project
c
project_bugs_path
project_bug_path(@bug)
c
project_bug_path(@bug)
c
project_bugs_path
c
project_bugs_path(@project)
project_bug_path(@project)
project_bug_path(@project.bugs)
project_bug_path(@project.bug)
project_bug_path(@bug.project)
project_bugs_path
project_bugs_path(@bug)
project_bugs_path(@project)
project_bug_path(@bug,@project)
project_bug_path(@project)
project_bug_path
project_bug_path~
project_bug_path(@project,@bug)
project_bug_path(@bug)
project_bugs_path
@bug
c
BUG_STATUS_OPTIONS.include?('News')
BUG_STATUS_OPTIONS.include?('New')
BUG_STATUS_OPTIONS.include?(bug_status)
if BUG_STATUS_OPTIONS.index(bug_status)
if BUG_STATUS_OPTIONS.index(bug_status) end
unless BUG_STATUS_OPTIONS.index(bug_status)
unless BUG_STATUS_OPTIONS.index(bug_status)() end
unless BUG_STATUS_OPTIONS.index(bug_status) end
BUG_STATUS_OPTIONS.index(bug_status)
BUG_STATUS_OPTIONS
c
(bug_type == "Bug")
c
(bug_type == "Bug")
c
(bug_type == "Bug")
if (bug_type == "Bug")
c
bug_type
bug_status
Bug
current_user
params.require(:bug)
params
c
@bugs.count
Bug.where(id: @bugs.map(&:id)).count
Bug.where(id: @bugs.map(&:id))
@proj
@bugs
c
@bugs.order(updated_at: DESC)
@bugs.count
@bugs
c
@bugs
Bug.where(created_id: 8)
Bug.where(created_id: 11)
Bug.where(created_id: 5)
Bug.where(created_id: 3)
Bug.where(created_id: 2)
Bug.where(created_id: 1)
Bug.where(created_id: 4)
Bug.where(created_id: 9)
Bug.where(created_id: params[:id])
@proj.order(updated_at: DESC)
@proj
@bugs.order(updated_at: DESC)
@bugs.order(updated_at)
@bugs.order(updated_at: ASC)
@bugs.order(updated_at: DESC)
@bugs
c
@bugs.count
@bugs
c
@bugs
@bugs.count
@proj.count
c
@proj.count
@proj.first
@proj
@bugs
c
@bugs
c
@bugs
c
current_user
Project.where(user_id: current_user.id)
Project.find_by(manager: current_user).user_projects
Project.find_by(manager: current_user).user_projects.count
Project.where(user_id: current_user.id).count
Project.find_by(manager: current_user).user_projects
Project.where(user_id: current_user.id)
Project.find_by(user_id: current_user.id).user_projects
Project.find_by(manager: current_user).user_projects
Project.find_by(manager: current_user)
Project.find(manager: current_user)
current_user.user_projects
current_user.projects
current_user.manager
current_user.project
current_user.projects
current_user.user_projects.count
current_user.user_project
current_user.user_projects
current_user.projects.count
current_user.projects
current_user.project
current_user.bugs.count
current_user.bugs
@bugs = Project.find_by(user_id: params[:id]).user_projects.count if manager?
@bugs = Project.find_by(user_id: params[:id]).bugs.count if manager?
@bugs = Project.find_by(user_id: params[:id]).user_projects.bugs.count if manager?
@bugs = Project.find_by(user_id: params[:id]).user_projects.bugs if manager?
@bugs = Project.find_by(user_id: params[:id]).user_projects.count if manager?
@bugs = Project.find_by(user_id: params[:id]).user_projects if manager?
@bugs = Project.find_by(user_id: params[:id]) if manager?
@bugs = Project.find_by(user_id: params[:id]) if qa?
@bugs = Bug.where(created_id: params[:id]) if qa?
@bugs = Bug.where(assign_id: params[:id]) if developer?
c
@projects = Project.where(user_id: current_user.id).count if manager?
@projects = Project.where(user_id: current_user.id) if manager?
c
@projects = Project.where(user_id: current_user.id) if manager?
manager?
c
reload!
manager?
current_user.user_types
current_user.user_type
current_user
manager?
@projects = Project.where(user_id: current_user.id) if manager?
c
current_user
@projects = Project.where(user_id: current_user.id) if manager?
@projects = Project.where(user_id: current_user.id) if qa?
@projects = Project.where(user_id: current_user.id) if developer?
@projects = Project.where(user_id: current_user.id) if manager?
@projects = Project.where(user_id: current_user.id)
@projects
c
params
@bugs = Project.find_by(user_id: )
c
current_user.user_types
current_user.user_type
current_user
@bugs = Bug.where(assign_id: params[:id]) if developer?
 developer?
if developer?
c
developer?
if developer?
params
@bugs = Bug.where(assign_id: params[:id]) if developer?
c
@bugs
c
user
c
ApplicationController.helpers.manager?(user,{})
ApplicationController.helpers.manager?(user,)
ApplicationController.helpers.manager?(user,,)
ApplicationController.helpers.manager?(user)
ApplicationController.helpers.manager?
ApplicationController.helpers.manager
ApplicationController.helpers.user
ApplicationController.helpers
ApplicationController.class
ApplicationController
ApplicationController.helpers
ApplicationController.manager?(
ApplicationController.helpers.manager?(user)
ApplicationController.helpers.manager?
user.ApplicationController.helpers.manager?
user.manager?(user)
user.manager?
user
c
user.user_types
user.user_type
user.user_types
user.user_types.developer?
user.user_types
user
user.developer?
user.developer
user.user_type == '2'
user.user_type == "2"
user.user_type == 2
user.user_type
user
c
current_user.user_type == '2'
current_user.user_type == '0'
current_user.user_type === "1"
current_user.user_type === "2"
current_user.user_type === '2'
current_user.user_type == '2'
current_user.user_type == "2"
current_user.user_type
current_user
c
current_user
user.developer?
user.qa?
user.manager?
user
c
params
params.require(:user).permit(:user_type)
c
@e = User.user_types.map { |key,value| [key,value] }
c
params.require(:user).permit(:user_type)
c
@e = User.user_types.map { |key,value| [key,value] }
c
params.require(:user).permit(:user_type)
c
@e = User.user_types.map { |key,value| [key,value] }
@e = User.user_types.map { |key,value| [value,key] }
@e = User.user_types.map { |key,value| [key,key] }
@e = User.user_types.map { |key,value| [key.humanize,key] }
User.user_types
c
params.require(:user).permit(:user_type)
params.require(:user)
params
c
params
devise_parameter_sanitizer
user_params
params
c
params
user_params
params
c
user.qa?
user.developer?
user.manager?
